{"_id":"ml-som","_rev":"23-93f22aaec289dbe0ac42499cccb96b16","name":"ml-som","description":"Self-organizing map (SOM) / Kohonen network","dist-tags":{"latest":"0.0.6"},"versions":{"0.0.1":{"name":"ml-som","version":"0.0.1","description":"Self-organizing map (SOM) / Kohonen network","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/som"},"keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/som/issues"},"homepage":"https://github.com/mljs/som","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"286d61df02988a0040e0b8750c3eb0bacd226ca7","_id":"ml-som@0.0.1","_shasum":"71612e1acfcfc20dc00da60b05ad741a3ccb51c9","_from":".","_npmVersion":"2.0.0-beta.2","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"71612e1acfcfc20dc00da60b05ad741a3ccb51c9","tarball":"https://registry.npmjs.org/ml-som/-/ml-som-0.0.1.tgz","integrity":"sha512-JaeZ8h/MCiHHf+h6g82o1z+6uqMo3QSHG9O21npXpaoWTMjNvNSVLfEvRbJwmza4eKH6mI4Mxmk/3ZMrjPf9Eg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHPWyLC7Atqinmqf0UGxKhOPFikWqK9taLENalr6mmghAiBpVwGfH7mTjKbTc90HNd495J0ZNDqslygW6fzWnT3L2A=="}]}},"0.0.2":{"name":"ml-som","version":"0.0.2","description":"Self-organizing map (SOM) / Kohonen network","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/som"},"keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/som/issues"},"homepage":"https://github.com/mljs/som","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"2f835994c6c8198489095467d73c15088e82bdd7","_id":"ml-som@0.0.2","_shasum":"0a4929a3fcb0b7057f52d3b0d8c37aee00151a5f","_from":".","_npmVersion":"2.0.0-beta.2","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"0a4929a3fcb0b7057f52d3b0d8c37aee00151a5f","tarball":"https://registry.npmjs.org/ml-som/-/ml-som-0.0.2.tgz","integrity":"sha512-rns3HXiSJlz0nQRWWftH+tTo76Lc6fFNodzIW/NARtBHMDEBiOtQBa9zJsr2WhlHIfg4fI+UBsw2vsecVUvRgQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDdIEd9ETRMw7r5KzqbgMegeZkfoyjwb5GNwOYeayLM9AiEAjEUxFE0aY3ynA4Rhf3s2AoxaC4BhDahG9UHGFAES3Es="}]}},"0.0.3":{"name":"ml-som","version":"0.0.3","description":"Self-organizing map (SOM) / Kohonen network","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/som"},"keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/som/issues"},"homepage":"https://github.com/mljs/som","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"8fc2319b4e23660fc060c93d75b6b02ed516f678","_id":"ml-som@0.0.3","_shasum":"c062038f32bba544d79dc045922aa2a172a2bdc4","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.11.13","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"c062038f32bba544d79dc045922aa2a172a2bdc4","tarball":"https://registry.npmjs.org/ml-som/-/ml-som-0.0.3.tgz","integrity":"sha512-yauScfB/3B5poESR368nVuN6sBLdmjHU5N9WuAbqCmrGU5fb2nsAfRUxGD9Qb/uCuhwfw4mqMyxAc3qPbE9ydA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDOriir7yZFkAjhzvYfxtmDQ3IH4omNFToF5fN7dMQoSwIhAKkyQ7+ld6eNFlbmkuNwdZeQ5BZ1kez3QHh5ramV8IR+"}]}},"0.0.4":{"name":"ml-som","version":"0.0.4","description":"Self-organizing map (SOM) / Kohonen network","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/som"},"keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/som/issues"},"homepage":"https://github.com/mljs/som","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"5be18c8446f3bdf53d44aa6b5da7b52ba6d86253","_id":"ml-som@0.0.4","_shasum":"83a318aa92143167e5e78515fc392f1ad70fb90f","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.11.13","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"83a318aa92143167e5e78515fc392f1ad70fb90f","tarball":"https://registry.npmjs.org/ml-som/-/ml-som-0.0.4.tgz","integrity":"sha512-gmn0AxhKP1kDIpj3YaSc2bov0JWkYSq26veoUhlE3Dc5rD3+blmRfTgP/f5BnbMQvOSI+WLI+vxZ5O5eGKuBUA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHQ9yB42vuubEaGAu07WMy/Vsd74Tu9DkkkDc87fvQaRAiEA3ADyWVoYUsZerbDMYSjFcnGeb06r53wrsHBL1Q4qxro="}]}},"0.0.5":{"name":"ml-som","version":"0.0.5","description":"Self-organizing map (SOM) / Kohonen network","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/som"},"keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/som/issues"},"homepage":"https://github.com/mljs/som","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"9198ecfad84db6aada54c9ba3a8e105127b5c5b0","_id":"ml-som@0.0.5","_shasum":"a6bee3cdce504b71c71786be5df02e76823ba6d0","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.11.13","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"a6bee3cdce504b71c71786be5df02e76823ba6d0","tarball":"https://registry.npmjs.org/ml-som/-/ml-som-0.0.5.tgz","integrity":"sha512-6Bj1OilWsXyX4vr2k98SGETUeDshRbA1sh45JCuswnN9BGtmxhSKNgqQki71YFtppEO9fexEHw73U1BvP9YPHg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCjUhVFT7nxMC9W93VVcvTGWMZBn4Mfq4B6Kc90HQzxYAIgW08PXWxzEn9eCYZ96gq2bx14R5VssPTOeIuA7rfee+U="}]}},"0.0.6":{"name":"ml-som","version":"0.0.6","description":"Self-organizing map (SOM) / Kohonen network","main":"src/index.js","directories":{"lib":"src","test":"test"},"scripts":{"test":"mocha --require should-approximately-deep --reporter mocha-better-spec-reporter --recursive"},"repository":{"type":"git","url":"https://github.com/mljs/som"},"keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"author":{"name":"Michaël Zasso"},"license":"MIT","bugs":{"url":"https://github.com/mljs/som/issues"},"homepage":"https://github.com/mljs/som","devDependencies":{"mocha-better-spec-reporter":"latest","mocha":"latest","should":"latest","should-approximately-deep":"latest"},"gitHead":"43adcd4f417ce5c6de201b875b85a28700ef71f6","_id":"ml-som@0.0.6","_shasum":"1602051c4b8a3ca6b91fd6c18517aa3b0c566815","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.11.13","_npmUser":{"name":"targos","email":"targos@live.com"},"maintainers":[{"name":"targos","email":"targos@live.com"}],"dist":{"shasum":"1602051c4b8a3ca6b91fd6c18517aa3b0c566815","tarball":"https://registry.npmjs.org/ml-som/-/ml-som-0.0.6.tgz","integrity":"sha512-N/whNU8eFY08RV/iU/azeBtJewRPqSsEu3DUojHn+isHGocNHkMrg6yoX44F6xh+hX1BlEf+RdRjIa1unGsvAQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAr+oft0+3/sOZXK5zVFNUOStnR1DAaybjn69sppgakuAiEA74EuM16EGGouOUnhjS3XQzvdq8hqy6VBWit+elwkCOQ="}]}}},"readme":"# ml-som\n\nself-organizing map (SOM) / Kohonen network\n\n## Installation\n```js\n$ npm install ml-som\n```\n\n## Methods\n\n### new SOM(x, y, [options])\n\nCreates a new SOM instance with x * y dimensions.\n\n__Arguments__\n\n* `x` - Dimension of the x axis\n* `y` - Dimension of the y axis\n* `options` - Object with options for the algorithm\n\n__Options__\n\n* `fields` - Either a number (size of input vectors) or a map of field descriptions (to convert them to vectors)\n* `iterations` - Number of iterations over the training set for the training phase (default: 10). The total number of training steps will be `iterations` * `trainingSet.length`\n* `learningRate` - Multiplication coefficient for the learning algorithm (default: 0.1)\n* `method` - Iteration method of the learning algorithm (default: random)\n *  `random` - Pick an object of the training set randomly\n *  `traverse` - Go sequentially through the training set\n* `randomizer` - Function that must give numbers between 0 and 1 (default: Math.random)\n* `distance` - Function that computes the distance between two vectors of the same length (default: square euclidean distance)\n* `gridType` - Shape of the grid (default: rect)\n * `rect` - Rectangular grid\n * `hexa` - Hexagonal grid\n* `torus` - Boolean indicating if the grid should be considered a torus for the selection of the neighbors (default: true)\n\n__Example__\n\n```js\nvar SOM = require('ml-som');\nvar options = {\n  fields: {\n    r: [0, 255],\n    g: [0, 255],\n    b: [0, 255]\n  }\n};\n\nvar som = new SOM(20, 20, options);\n```\n\n### train(trainingSet)\n\nTrain the SOM with the provided `trainingSet`.\n\n__Arguments__\n\n* `trainingSet` - Array of training elements. If the `fields` was a number, each array element must be a normalized vector. If it was an object, each array element must be an object with at least the described properties, within the described ranges\n\n__Example__\n\n```js\nvar trainingSet = [\n  { r: 0, g: 0, b: 0 },\n  { r: 255, g: 0, b: 0 },\n  { r: 0, g: 255, b: 0 },\n  { r: 0, g: 0, b: 255 },\n  { r: 255, g: 255, b: 255 }\n];\n\nsom.train(trainingSet);\n```\n\n### getConvertedNodes()\n\nReturns a 2D array containing the nodes of the grid, in the structure described by the `fields` option.\n\n### setTraining(trainingSet)\n\nSet the training set for use with the next method\n\n### trainOne()\n\nExecutes the next training iteration and returns true. Returns false if the training is over. Useful to draw the grid or compute some things after each learning step.\n\n__Example__\n\n```js\nsom.setTraining(trainingSet);\nwhile(som.trainOne()) {\n  var nodes = som.getConvertedNodes();\n  // do something with the nodes\n}\n```\n\n### predict([data], [computePosition])\n\nReturns for each data point the coordinates of the corresponding best matching unit (BMU) on the grid\n\n__Arguments__\n\n* `data` - Data point or array of data points (default: training set).\n* `computePosition` - True if you want to compute the position of the point in the cell, using the direct neighbors (default: false). This option is currently only implemented for rectangular grids.\n\n__Example__\n\n```js\n// create and train the som\nvar result1 = som.predict({ r: 45, g: 209, b: 100 });\n// result1 = [ 2, 26 ]\nvar result2 = som.predict([{ r: 45, g: 209, b: 100 }, { r: 155, g: 22, b: 12 }], true);\n// result2 = [ [ 2, 26, [ 0.236, 0.694 ] ], [ 33, 12, [ 0.354, 0.152 ] ] ]\n```\n\n### getFit([dataset])\n\nReturns an array of fit values which are the square root of the distance between the input vector and its corresponding BMU.\n\n__Arguments__\n\n* `dataset` - Array of vectors to for which to calculate fit values. Defaults to the training set.\n\n### getQuantizationError()\n\nReturns the mean of the fit values for the training set. This number can be used to compare several runs of the same SOM.\n\n### export([includeDistance])\n\nExports the model to a JSON object that can be written to disk and reloaded\n\n__Arguments__\n\n* `includeDistance` - Boolean indicating if the distance function should be included in the model as a String (not recommended). Note that there is no need to include the default function and that it cannot work if the function depends on variables that are out of its scope (default: false).\n\n### SOM.load(model, [distanceFunction])\n\nReturns a new SOM instance based on the `model`. If the model was created with a custom distance function, the `distance` argument should be this function.\n\n__Arguments__\n\n* `model` - JSON object generated with `som.export()`\n* `distanceFunction` - Optionally provide the distance function used to create the model.\n\n## License\n\n  MIT\n","maintainers":[{"email":"bot+npm-mljs@zakodium.com","name":"mljs-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos+npm@protonmail.com","name":"targos"},{"email":"lpatiny@gmail.com","name":"lpatiny"}],"time":{"modified":"2022-06-19T23:48:44.085Z","created":"2014-10-24T12:53:18.166Z","0.0.1":"2014-10-24T12:53:18.166Z","0.0.2":"2014-10-28T09:26:04.199Z","0.0.3":"2014-12-01T09:50:01.362Z","0.0.4":"2014-12-03T10:19:45.067Z","0.0.5":"2014-12-09T13:41:26.595Z","0.0.6":"2014-12-09T15:52:58.964Z"},"homepage":"https://github.com/mljs/som","keywords":["som","self-organizing map","Kohonen","network","neural","data","mining","datamining","machine","learning"],"repository":{"type":"git","url":"https://github.com/mljs/som"},"author":{"name":"Michaël Zasso"},"bugs":{"url":"https://github.com/mljs/som/issues"},"license":"MIT","readmeFilename":"README.md","users":{"selchenkov":true}}