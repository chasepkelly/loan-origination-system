{"_id":"libsvm-js","_rev":"22-1bb178205ddcf170ce8031c5ac3dbc54","name":"libsvm-js","description":"A port of libsvm to javascript using emscripten","dist-tags":{"latest":"0.2.1"},"versions":{"0.1.0":{"name":"libsvm-js","version":"0.1.0","description":"A port of libsvm to javascript using emscripten","main":"wasm.js","files":["src","dist","asm.js","wasm.js","LICENSE"],"scripts":{"build":"rimraf dist && make; make clean","demo-build":"rimraf demo-dist && BABEL_ENV=production webpack -p --config webpack.production.js && cp demos/index.html demo-dist","deploy":"npm run demo-build && gh-pages -d demo-dist","docs":"jsdoc2md src/loadSVM.js -t .docs/Readme.hbs --no-cache > README.md","eslint":"eslint src demos","eslint-fix":"eslint --fix src demos","serve":"webpack-dev-server","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should --recursive test","build-benchmark":"(cd benchmark/iris; make)","benchmark":"npm run build-benchmark && node benchmark/bin all all 5","xyz":"echo $1"},"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"keywords":["svm","libsvm","machine","learning","support","vector","machines"],"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mljs/libsvm/issues"},"homepage":"https://github.com/mljs/libsvm#readme","dependencies":{},"devDependencies":{"babel-core":"^6.23.1","babel-eslint":"^7.2.1","babel-loader":"^6.3.2","babel-plugin-syntax-dynamic-import":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.23.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-babili":"^0.0.12","babel-preset-env":"^1.2.1","babel-preset-react":"^6.23.0","bootstrap":"4.0.0-alpha.6","chroma-js":"^1.2.2","cli-table":"^0.3.1","css-loader":"^0.27.1","eslint":"^3.18.0","eslint-config-cheminfo":"^1.7.0","eslint-config-neptun-react":"^1.0.1","eslint-plugin-no-only-tests":"^1.1.0","eslint-plugin-react":"^6.10.3","file-loader":"^0.10.1","font-awesome":"^4.7.0","font-awesome-webpack":"^0.0.5-beta.2","gh-pages":"^0.12.0","imports-loader":"^0.7.1","jquery":"^3.2.1","jsdoc-to-markdown":"^3.0.0","less":"^2.7.2","lodash.countby":"^4.6.0","lodash.isequal":"^4.5.0","lodash.mapvalues":"^4.6.0","lodash.reduce":"^4.6.0","lodash.throttle":"^4.1.1","ml-dataset-iris":"^1.0.0","ml-svm":"^2.1.2","mocha":"^3.2.0","mocha-better-spec-reporter":"^3.1.0","react":"^15.4.2","react-dom":"^15.4.2","react-hot-loader":"beta","react-icons":"^2.2.5","react-loading":"^0.1.2","react-redux":"^5.0.3","react-router":"^4.0.0","react-router-dom":"^4.0.0","redux":"^3.6.0","redux-form":"^6.5.0","redux-undo":"1.0.0-beta9-7","reselect":"^2.5.4","rimraf":"^2.6.1","should":"^11.2.0","style-loader":"^0.13.2","tether":"^1.4.0","url-loader":"^0.5.8","webpack":"^2.2.1","webpack-dev-server":"^2.4.1","webpack-visualizer-plugin":"^0.1.11","worker-loader":"^0.8.0"},"gitHead":"a6006ddf694542457ab1b4b144bb57bf142e6e56","_id":"libsvm-js@0.1.0","_npmVersion":"5.0.0","_nodeVersion":"8.0.0","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"integrity":"sha512-50ndtF0lqbE5CRmYqHQ0qJW9ZKcuEQQD32lu8kroiybilZ1sIG6G9I4L/tNr9hjBrUE8LgWiuYVjQgEJN5C0aA==","shasum":"bd812bd8d5fb9779196121200902648b9a7fa143","tarball":"https://registry.npmjs.org/libsvm-js/-/libsvm-js-0.1.0.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDIahJjZrm4LHIuJVh+aFLOh08Cw1EpfhXErdGvbFfs0wIgJa+YCXiE8BDjFu5mFR3RWworSFrpU2pGvfW4ISx/KvI="}]},"maintainers":[{"name":"stropitek","email":"kostro.d@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/libsvm-js-0.1.0.tgz_1496413373502_0.8728953851386905"},"directories":{}},"0.1.1":{"name":"libsvm-js","version":"0.1.1","description":"A port of libsvm to javascript using emscripten","main":"wasm.js","files":["src","dist","asm.js","wasm.js","LICENSE"],"scripts":{"build":"rimraf dist && make; make clean","demo-build":"rimraf demo-dist && BABEL_ENV=production webpack -p --config webpack.production.js && cp demos/index.html demo-dist","deploy":"npm run demo-build && gh-pages -d demo-dist","docs":"jsdoc2md src/loadSVM.js -t .docs/Readme.hbs --no-cache > README.md","eslint":"eslint src demos","eslint-fix":"eslint --fix src demos","start":"webpack-dev-server","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should --recursive test","build-benchmark":"(cd benchmark/iris; make)","benchmark":"npm run build-benchmark && node benchmark/bin all all 5","xyz":"echo $1"},"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"keywords":["svm","libsvm","machine","learning","support","vector","machines"],"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mljs/libsvm/issues"},"homepage":"https://github.com/mljs/libsvm#readme","dependencies":{},"devDependencies":{"babel-core":"^6.25.0","babel-eslint":"^7.2.3","babel-loader":"^7.1.0","babel-plugin-lodash":"^3.2.11","babel-plugin-syntax-dynamic-import":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.23.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-babili":"^0.1.4","babel-preset-env":"^1.5.2","babel-preset-react":"^6.24.1","bootstrap":"4.0.0-alpha.6","chroma-js":"^1.3.4","cli-table":"^0.3.1","css-loader":"^0.28.4","eslint":"^4.0.0","eslint-config-cheminfo":"^1.8.0","eslint-config-neptun-react":"^1.0.2","eslint-plugin-no-only-tests":"^2.0.0","eslint-plugin-react":"^7.1.0","file-loader":"^0.11.2","font-awesome":"^4.7.0","font-awesome-webpack":"^0.0.5-beta.2","gh-pages":"^1.0.0","imports-loader":"^0.7.1","jquery":"^3.2.1","jsdoc-to-markdown":"^3.0.0","less":"^2.7.2","lodash-es":"^4.17.4","lodash-webpack-plugin":"^0.11.4","ml-dataset-iris":"^1.0.0","ml-svm":"^2.1.2","mocha":"^3.4.2","mocha-better-spec-reporter":"^3.1.0","preact":"^8.1.0","preact-compat":"^3.16.0","react":"^15.6.1","react-dom":"^15.6.1","react-icons":"^2.2.5","react-loading-animation":"^1.3.0","react-redux":"^5.0.5","react-router":"^4.1.1","react-router-dom":"^4.1.1","redux":"^3.7.0","redux-form":"^6.8.0","redux-undo":"1.0.0-beta9-7","reselect":"^2.5.4","rimraf":"^2.6.1","serviceworker-webpack-plugin":"^0.2.3","should":"^11.2.0","style-loader":"^0.18.2","tether":"^1.4.0","url-loader":"^0.5.9","webpack":"^2.6.1","webpack-bundle-analyzer":"^2.8.2","webpack-dev-server":"^2.5.0","webpack-visualizer-plugin":"^0.1.11","worker-loader":"^0.8.0"},"gitHead":"fa523320744cb44bec3c0b04e5614a7f98542553","_id":"libsvm-js@0.1.1","_npmVersion":"5.0.3","_nodeVersion":"8.1.3","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"integrity":"sha512-vbgTSZtEkC7Wov0rJXUo5IUjS08WYpBGuPiKvs+iBpczW9UtVetlglwteqSeGUvE9TbHkpVPW1iAwKRphw7Usw==","shasum":"e5b1ba93fe633795fe347d8e533c39789cef6c77","tarball":"https://registry.npmjs.org/libsvm-js/-/libsvm-js-0.1.1.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGgcIaCP1VmX9NJVdspJIE0i8DVOHwdB/EBwxtjsETxHAiEA7cmMMuvGcr/gYVo/a9eWg+uWILxgXIEYhB75pVG71oU="}]},"maintainers":[{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"kostro.d@gmail.com","name":"stropitek"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/libsvm-js-0.1.1.tgz_1499327573579_0.31663059326820076"},"directories":{}},"0.1.2":{"name":"libsvm-js","version":"0.1.2","description":"A port of libsvm to javascript using emscripten","main":"wasm.js","files":["src","dist","asm.js","wasm.js","LICENSE"],"scripts":{"build":"rimraf dist && make; make clean","demo-build":"rimraf demo-dist && BABEL_ENV=production webpack -p --config webpack.production.js && cp demos/index.html demo-dist","deploy":"npm run demo-build && gh-pages -d demo-dist","docs":"jsdoc2md src/loadSVM.js -t .docs/Readme.hbs --no-cache > README.md","eslint":"eslint src demos","eslint-fix":"eslint --fix src demos","start":"webpack-dev-server","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should --recursive test","build-benchmark":"(cd benchmark/iris; make)","benchmark":"npm run build-benchmark && node benchmark/bin all all 5","xyz":"echo $1"},"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"keywords":["svm","libsvm","machine","learning","support","vector","machines"],"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mljs/libsvm/issues"},"homepage":"https://github.com/mljs/libsvm#readme","dependencies":{},"devDependencies":{"babel-core":"^6.25.0","babel-eslint":"^7.2.3","babel-loader":"^7.1.0","babel-plugin-lodash":"^3.2.11","babel-plugin-syntax-dynamic-import":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.23.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-babili":"^0.1.4","babel-preset-env":"^1.5.2","babel-preset-react":"^6.24.1","bootstrap":"4.0.0-alpha.6","chroma-js":"^1.3.4","cli-table":"^0.3.1","css-loader":"^0.28.4","eslint":"^4.0.0","eslint-config-cheminfo":"^1.8.0","eslint-config-neptun-react":"^1.0.2","eslint-plugin-no-only-tests":"^2.0.0","eslint-plugin-react":"^7.1.0","file-loader":"^0.11.2","font-awesome":"^4.7.0","font-awesome-webpack":"^0.0.5-beta.2","gh-pages":"^1.0.0","imports-loader":"^0.7.1","jquery":"^3.2.1","jsdoc-to-markdown":"^3.0.0","less":"^2.7.2","lodash-es":"^4.17.4","lodash-webpack-plugin":"^0.11.4","lodash.omitby":"^4.6.0","lodash.range":"^3.2.0","ml-dataset-iris":"^1.0.0","ml-kernel":"^2.3.4","ml-svm":"^2.1.2","mocha":"^3.4.2","mocha-better-spec-reporter":"^3.1.0","preact":"^8.1.0","preact-compat":"^3.16.0","react":"^15.6.1","react-dom":"^15.6.1","react-icons":"^2.2.5","react-loading-animation":"^1.3.0","react-redux":"^5.0.5","react-router":"^4.1.1","react-router-dom":"^4.1.1","redux":"^3.7.0","redux-form":"^6.8.0","redux-undo":"1.0.0-beta9-7","reselect":"^2.5.4","rimraf":"^2.6.1","serviceworker-webpack-plugin":"^0.2.3","should":"^11.2.0","style-loader":"^0.18.2","tether":"^1.4.0","url-loader":"^0.5.9","webpack":"^2.6.1","webpack-bundle-analyzer":"^2.8.2","webpack-dev-server":"^2.5.0","webpack-visualizer-plugin":"^0.1.11","worker-loader":"^0.8.0"},"gitHead":"cbd954660e440c868590650b278bf4296cc28220","_id":"libsvm-js@0.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"integrity":"sha512-iIEEWhKnL5u0xm9Kn74H3iQFa8JH2Tcpt1xtNz/KquRlDGzOTYmpfXArcS4UXR8MHFIcgwirL3f1wyYtftpRDQ==","shasum":"00464a13a2cbd4124a2561e07253360865b2dd19","tarball":"https://registry.npmjs.org/libsvm-js/-/libsvm-js-0.1.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFlwgM4DGHl32xFSRdCcI/U1PoaTgtwHRwmqHorLPIASAiAZmbXVvjBgeWR9+jQOJsWoYOVTuu8A1erVFu/6tq0wxA=="}]},"maintainers":[{"email":"swrt_9950@hotmail.com","name":"jeffersonh44"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"kostro.d@gmail.com","name":"stropitek"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/libsvm-js-0.1.2.tgz_1500984877178_0.900812353240326"},"directories":{}},"0.1.3":{"name":"libsvm-js","version":"0.1.3","description":"A port of libsvm to javascript using emscripten","main":"wasm.js","files":["src","dist","asm.js","wasm.js","LICENSE"],"scripts":{"benchmark":"npm run build-benchmark && node benchmark/bin","build-benchmark":"(cd benchmark/iris; make)","build":"rimraf dist && make; make clean","demo-build":"rimraf demo-dist && BABEL_ENV=production webpack -p --config webpack.production.js && cp demos/index.html demo-dist","deploy":"npm run demo-build && gh-pages -d demo-dist","docs":"jsdoc2md src/loadSVM.js -t .docs/Readme.hbs --no-cache > README.md","eslint":"eslint src/loadSVM.js demos examples","eslint-fix":"eslint --fix src/loadSVM.js demos examples","start":"webpack-dev-server","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should --recursive test","xyz":"echo $1"},"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"keywords":["svm","libsvm","machine","learning","support","vector","machines"],"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mljs/libsvm/issues"},"homepage":"https://github.com/mljs/libsvm#readme","dependencies":{},"devDependencies":{"babel-core":"^6.26.0","babel-eslint":"^8.0.3","babel-loader":"^7.1.2","babel-plugin-lodash":"^3.3.2","babel-plugin-syntax-dynamic-import":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-babili":"^0.1.4","babel-preset-env":"^1.6.1","babel-preset-react":"^6.24.1","bootstrap":"4.0.0-alpha.6","chroma-js":"^1.3.4","cli-table":"^0.3.1","css-loader":"^0.28.7","eslint":"^4.13.1","eslint-config-cheminfo":"^1.9.1","eslint-config-neptun-react":"^1.0.2","eslint-plugin-no-only-tests":"^2.0.0","eslint-plugin-react":"^7.5.1","file-loader":"^0.11.2","font-awesome":"^4.7.0","font-awesome-webpack":"^0.0.5-beta.2","gh-pages":"^1.1.0","imports-loader":"^0.7.1","jquery":"^3.2.1","jsdoc-to-markdown":"^3.0.2","less":"^2.7.3","lodash-es":"^4.17.4","lodash-webpack-plugin":"^0.11.4","lodash.omitby":"^4.6.0","lodash.range":"^3.2.0","ml-dataset-iris":"^1.0.0","ml-kernel":"^2.3.4","ml-svm":"^2.1.2","mocha":"^3.5.3","mocha-better-spec-reporter":"^3.1.0","preact":"^8.2.6","preact-compat":"^3.17.0","react":"^15.6.2","react-dom":"^15.6.2","react-icons":"^2.2.7","react-loading-animation":"^1.4.0","react-redux":"^5.0.6","react-router":"^4.2.0","react-router-dom":"^4.2.2","redux":"^3.7.2","redux-form":"^6.8.0","redux-undo":"1.0.0-beta9-7","reselect":"^2.5.4","rimraf":"^2.6.2","serviceworker-webpack-plugin":"^0.2.3","should":"^11.2.0","style-loader":"^0.18.2","tether":"^1.4.3","url-loader":"^0.5.9","webpack":"^3.10.0","webpack-bundle-analyzer":"^2.9.1","webpack-dev-server":"^2.9.7","webpack-visualizer-plugin":"^0.1.11","worker-loader":"^0.8.1"},"gitHead":"69354e7bae6ece87d22162b86df2ddad5d4cbeea","_id":"libsvm-js@0.1.3","_npmVersion":"5.6.0","_nodeVersion":"9.2.0","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"integrity":"sha512-+pPqYFAqm3GTlWaiuOIAsX1u8ryyX9VryybwqS11Wwpmb03SaCrbgjtEgwPfcFCfuNPoVbFs5OLVdveWqmLJvQ==","shasum":"54d997085c3672d2ecb02de9db7eb3252c20db6d","tarball":"https://registry.npmjs.org/libsvm-js/-/libsvm-js-0.1.3.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAYR47qIueGDH6a9E98/Ov8BvCGMVmmKA8kn0hSY/4SzAiBG4tt3fmUN2afE+pSLIYEy5sEM8ifuBMDEVY7alMJD+g=="}]},"maintainers":[{"email":"jeffersonh44@gmail.com","name":"jeffersonh44"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"targos@live.com","name":"targos"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"admin@cheminfo.org","name":"ml-bot"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/libsvm-js-0.1.3.tgz_1513097542940_0.5984609930310398"},"directories":{}},"0.2.0":{"name":"libsvm-js","version":"0.2.0","description":"A port of libsvm to javascript using emscripten","main":"wasm.js","files":["src","out","dist","asm.js","wasm.js","LICENSE"],"scripts":{"benchmark":"npm run build-benchmark && node benchmark/bin","build-benchmark":"(cd benchmark/iris; make)","build":"run-s build-emscripten webpack-build","build-emscripten-clean":"make clean && rm -rf out/emscripten/","build-emscripten-wasm":"rimraf out/wasm && mkdir -p out/wasm && make wasm && cat src/pre.js out/emscripten/wasm/libsvm.js src/post.js > out/wasm/libsvm.js && cp out/emscripten/wasm/libsvm.wasm out/wasm/libsvm.wasm","build-emscripten-asm":"rimraf out/asm &&  mkdir -p out/asm && make asm && cat src/pre.js out/emscripten/asm/libsvm.js src/post.js > out/asm/libsvm.js","build-emscripten":"run-s build-emscripten-wasm build-emscripten-asm build-emscripten-clean","webpack-build":"rimraf dist/browser && mkdir -p dist/browser/asm dist/browser/wasm &&  webpack --config webpack/webpack.wasm.js && webpack --config webpack/webpack.asm.js &&  cp out/wasm/libsvm.wasm dist/browser/wasm/","demo-build":"rimraf demo-dist && BABEL_ENV=production webpack -p --config webpack/webpack.production.js; cp demos/index.html demo-dist","deploy":"npm run demo-build && gh-pages -d demo-dist","docs":"jsdoc2md src/loadSVM.js -t .docs/Readme.hbs --no-cache > README.md","eslint":"eslint src/loadSVM.js demos examples","eslint-fix":"eslint --fix src/loadSVM.js demos examples","preinstall":"git submodule init && git submodule update","start":"webpack-dev-server --config webpack/webpack.config.js","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should --recursive test"},"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"keywords":["svm","libsvm","machine","learning","support","vector","machines"],"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mljs/libsvm/issues"},"homepage":"https://github.com/mljs/libsvm#readme","dependencies":{},"devDependencies":{"babel-core":"^6.26.0","babel-eslint":"^8.0.3","babel-loader":"^7.1.2","babel-plugin-lodash":"^3.3.2","babel-plugin-syntax-dynamic-import":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-babili":"^0.1.4","babel-preset-env":"^1.6.1","babel-preset-react":"^6.24.1","bootstrap":"4.0.0-alpha.6","chroma-js":"^1.3.4","cli-table":"^0.3.1","css-loader":"^0.28.7","eslint":"^4.19.1","eslint-config-cheminfo":"^1.17.2","eslint-config-neptun-react":"^1.0.2","eslint-plugin-import":"^2.10.0","eslint-plugin-jest":"^21.15.0","eslint-plugin-no-only-tests":"^2.0.0","eslint-plugin-react":"^7.5.1","file-loader":"^0.11.2","font-awesome":"^4.7.0","font-awesome-webpack":"^0.0.5-beta.2","gh-pages":"^1.1.0","imports-loader":"^0.7.1","jquery":"^3.2.1","jsdoc-to-markdown":"^3.0.3","less":"^2.7.3","lodash-es":"^4.17.4","lodash-webpack-plugin":"^0.11.4","lodash.omitby":"^4.6.0","lodash.range":"^3.2.0","ml-dataset-iris":"^1.0.0","ml-kernel":"^2.3.4","ml-svm":"^2.1.2","mocha":"^3.5.3","mocha-better-spec-reporter":"^3.1.0","npm-run-all":"^4.1.2","preact":"^8.2.6","preact-compat":"^3.17.0","react":"^15.6.2","react-dom":"^15.6.2","react-icons":"^2.2.7","react-loading-animation":"^1.4.0","react-redux":"^5.0.6","react-router":"^4.2.0","react-router-dom":"^4.2.2","redux":"^3.7.2","redux-form":"^6.8.0","redux-undo":"1.0.0-beta9-7","reselect":"^2.5.4","rimraf":"^2.6.2","serviceworker-webpack-plugin":"^0.2.3","should":"^11.2.0","style-loader":"^0.18.2","tether":"^1.4.3","url-loader":"^0.5.9","webpack":"^3.11.0","webpack-bundle-analyzer":"^2.9.1","webpack-dev-server":"^2.9.7","webpack-visualizer-plugin":"^0.1.11","worker-loader":"^0.8.1"},"gitHead":"428127a56e50cb661931a37b0db2a89b2dfe6c1b","_id":"libsvm-js@0.2.0","_npmVersion":"5.8.0","_nodeVersion":"8.9.1","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"integrity":"sha512-GoNTvq03jbSuRSZmDyAnhytgafMUyDvHaug2rB+p2Ms+eFAvusONSQTFeC4AtGy1TtCd8UHHch4+UdQu2jmAGA==","shasum":"582749861cb7581bb4e1eba656e46ed8699218a8","tarball":"https://registry.npmjs.org/libsvm-js/-/libsvm-js-0.2.0.tgz","fileCount":18,"unpackedSize":1064895,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCJv7ieJmRrq4LHkTIHabHW9shy2bugpiQSAKaf0drfXwIhAIiOJraMoe+GeyDcOA7a26d6fXBq7fWh2xHbHeAVpzVS"}]},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"jeffersonh44@gmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/libsvm-js_0.2.0_1522876387456_0.5984434919833612"},"_hasShrinkwrap":false},"0.2.1":{"name":"libsvm-js","version":"0.2.1","description":"A port of libsvm to javascript using emscripten","main":"wasm.js","files":["src","out","dist","asm.js","wasm.js","LICENSE"],"scripts":{"benchmark":"npm run build-benchmark && node benchmark/bin","build-benchmark":"(cd benchmark/iris; make)","build":"run-s build-emscripten webpack-build","build-emscripten-clean":"make clean && rm -rf out/emscripten/","build-emscripten-wasm":"rimraf out/wasm && mkdir -p out/wasm && make wasm && cat src/pre.js out/emscripten/wasm/libsvm.js src/post.js > out/wasm/libsvm.js && cp out/emscripten/wasm/libsvm.wasm out/wasm/libsvm.wasm","build-emscripten-asm":"rimraf out/asm &&  mkdir -p out/asm && make asm && cat src/pre.js out/emscripten/asm/libsvm.js src/post.js > out/asm/libsvm.js","build-emscripten":"run-s build-emscripten-wasm build-emscripten-asm build-emscripten-clean","webpack-build":"rimraf dist/browser && mkdir -p dist/browser/asm dist/browser/wasm &&  webpack --config webpack/webpack.wasm.js && webpack --config webpack/webpack.asm.js &&  cp out/wasm/libsvm.wasm dist/browser/wasm/","demo-build":"rimraf demo-dist && BABEL_ENV=production webpack -p --config webpack/webpack.production.js; cp demos/index.html demo-dist","deploy":"npm run demo-build && gh-pages -d demo-dist","docs":"jsdoc2md src/loadSVM.js -t .docs/Readme.hbs --no-cache > README.md","eslint":"eslint src/loadSVM.js demos examples","eslint-fix":"eslint --fix src/loadSVM.js demos examples","prepare":"git submodule init && git submodule update","start":"webpack-dev-server --config webpack/webpack.config.js","test":"npm run test-mocha && npm run eslint","test-mocha":"mocha --require should --recursive test"},"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"keywords":["svm","libsvm","machine","learning","support","vector","machines"],"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mljs/libsvm/issues"},"homepage":"https://github.com/mljs/libsvm#readme","dependencies":{},"devDependencies":{"babel-core":"^6.26.0","babel-eslint":"^8.0.3","babel-loader":"^7.1.2","babel-plugin-lodash":"^3.3.2","babel-plugin-syntax-dynamic-import":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-babili":"^0.1.4","babel-preset-env":"^1.6.1","babel-preset-react":"^6.24.1","bootstrap":"4.0.0-alpha.6","chroma-js":"^1.3.4","cli-table":"^0.3.1","css-loader":"^0.28.7","eslint":"^4.19.1","eslint-config-cheminfo":"^1.17.2","eslint-config-neptun-react":"^1.0.2","eslint-plugin-import":"^2.10.0","eslint-plugin-jest":"^21.15.0","eslint-plugin-no-only-tests":"^2.0.0","eslint-plugin-react":"^7.5.1","file-loader":"^0.11.2","font-awesome":"^4.7.0","font-awesome-webpack":"^0.0.5-beta.2","gh-pages":"^1.1.0","imports-loader":"^0.7.1","jquery":"^3.2.1","jsdoc-to-markdown":"^3.0.3","less":"^2.7.3","lodash-es":"^4.17.4","lodash-webpack-plugin":"^0.11.4","lodash.omitby":"^4.6.0","lodash.range":"^3.2.0","ml-dataset-iris":"^1.0.0","ml-kernel":"^2.3.4","ml-svm":"^2.1.2","mocha":"^3.5.3","mocha-better-spec-reporter":"^3.1.0","npm-run-all":"^4.1.2","preact":"^8.2.6","preact-compat":"^3.17.0","react":"^15.6.2","react-dom":"^15.6.2","react-icons":"^2.2.7","react-loading-animation":"^1.4.0","react-redux":"^5.0.6","react-router":"^4.2.0","react-router-dom":"^4.2.2","redux":"^3.7.2","redux-form":"^6.8.0","redux-undo":"1.0.0-beta9-7","reselect":"^2.5.4","rimraf":"^2.6.2","serviceworker-webpack-plugin":"^0.2.3","should":"^11.2.0","style-loader":"^0.18.2","tether":"^1.4.3","url-loader":"^0.5.9","webpack":"^3.11.0","webpack-bundle-analyzer":"^2.9.1","webpack-dev-server":"^2.9.7","webpack-visualizer-plugin":"^0.1.11","worker-loader":"^0.8.1"},"gitHead":"0081bcccb4a4d6aff8d342ab7b2675867cef5793","_id":"libsvm-js@0.2.1","_npmVersion":"6.0.1","_nodeVersion":"10.1.0","_npmUser":{"name":"stropitek","email":"kostro.d@gmail.com"},"dist":{"integrity":"sha512-tN9gh91NCAwSIhjgG3y8pdKETTwnwFvvSFNIrQQuJGVtAu0SO6Y43D7OEKMSVhQLQkgLADlDaqo9uxNGVEzJEA==","shasum":"607a0b073fb0a635546ca5b93b7205282051a877","tarball":"https://registry.npmjs.org/libsvm-js/-/libsvm-js-0.2.1.tgz","fileCount":21,"unpackedSize":1547278,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbBqMTCRA9TVsSAnZWagAAYXgQAJevtLVgX4pBUmw7wypE\nATf9snGijuFJm20+gmRLyBiCU1rXOuIOzajj3LNrzUBpuyGggVbVdXrM+Tmh\n39P9V1UUd0K9gmICXVJu3s4Xhilgl+RzyxBn6Il/1t90jyuQLGHabus5odkH\n/pg2cG8ThOxlCW42snFgFD+osbGV6lY3FYMNBm6nMHlmbbK312cmbWQgKmx/\n/FtfYuiRXCSXNiqyAi8Uy1+NS2lITj/qOzg8d7dBZVKYVlTAQu+2G4d6QDwC\n1yvz471tB7mBBMH5Zsb7rVbLZh/3C5N4FAaS4envpkk14iW0JJDvQ2RZJ1TD\nqzhz5ZPrsWro0l/BJDsvDbMeMA9GP9GurvzBORfPi7y5RIMGyzmx/lQ98pqq\nQ1tO6cE0fL7RIlmIjnlgYP7TkZxh7KxlRwZ4BoEjRqhPwcQukdifp+VgOpAu\niagWz9kUkObsjkDQY1dFMrf3Xmw88Pta4jJXtqpveJF5H42G+WxQpKgIluZA\nDKutKixggb+8g7MUFILTCCr1OW8r8Yu+EI6iGnvGA3fl/erbyrVHUDgTTj4G\nKxcD+8tnUth//IGl0YJEoZrc7Rnvg88uz3DGmNDFEW6hnS5P9fznREUfeXxz\n5cwelt1B3nDxhE6n+54LWlbrvsqeybeYejjTbzLZcIAL8CdlTqdSZT9iLG9i\nu7GM\r\n=6g+7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC8nME5ZwBV4E+/H+IfcXsnvIpSypid3hMJAPdDKvETIQIgJqatS8csDt1/A5F+IeiUWkAXSv9YDTEeyObZyT4vRCI="}]},"maintainers":[{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"jeffersonh44@gmail.com","name":"jeffersonh44"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"admin@cheminfo.org","name":"ml-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos@live.com","name":"targos"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/libsvm-js_0.2.1_1527161618769_0.3889143749416195"},"_hasShrinkwrap":false}},"readme":"[![NPM version][npm-image]][npm-url]\n[![npm download][download-image]][download-url]\n\n# [DEMO](https://mljs.github.io/libsvm/)\n\nPort of to port libsvm v3.22 using [emscripten](https://github.com/kripken/emscripten) , for usage in the browser or nodejs. 2 build targets: asm and WebAssembly.\n\nWhat is libsvm?\nlibsvm is a [c++ library](https://github.com/cjlin1/libsvm) developped by Chih-Chung Chang and Chih-Jen Lin that allows to do support vector machine (aka SVM) classification and regression.\n\nResources about libsvm:\n- [libsvm website](https://www.csie.ntu.edu.tw/~cjlin/libsvm/)\n- [libsvm github repository](https://github.com/cjlin1/libsvm)\n- [Wikipedia article](https://en.wikipedia.org/wiki/Support_vector_machine)\n- Chih-Chung Chang and Chih-Jen Lin, LIBSVM : a library for support vector machines. ACM Transactions on Intelligent Systems and Technology, 2:27:1--27:27, 2011.\n\n\n\n# Usage\n## Install\n```bash\nnpm install libsvm-js\n```\n\n## Load in nodejs\nThe main entry point loads the WebAssembly build and is asynchronous.\n```js\nrequire('libsvm-js').then(SVM => {\n    const svm = new SVM(); // ...\n});\n```\n\nThere is an alternative entry point if you want to use asm build. This entrypoint is synchronous.\n```js\nconst SVM = require('libsvm-js/asm');\nconst svm = new SVM(); // ...\n```\n\n## Load in the browser\nThe npm package contains a bundle for the browser that works with AMD and browser globals. There is one bundle for the asm build and another for the web assembly build. They are located in the `dist/browser` directory of the package. You can load them into your web page with a `script` tag. For the web assembly module, make sure that the libsvm.wasm file is served from the same relative path as the js file.\n\n## Basic usage\nThis example illustrates how to use the library to train and use an SVM classifier.\n```js\n\nasync function xor() {\n    const SVM = await\n    require('libsvm-js');\n    const svm = new SVM({\n        kernel: SVM.KERNEL_TYPES.RBF, // The type of kernel I want to use\n        type: SVM.SVM_TYPES.C_SVC,    // The type of SVM I want to run\n        gamma: 1,                     // RBF kernel gamma parameter\n        cost: 1                       // C_SVC cost parameter\n    });\n\n    // This is the xor problem\n    //\n    //  1  0\n    //  0  1\n    const features = [[0, 0], [1, 1], [1, 0], [0, 1]];\n    const labels = [0, 0, 1, 1];\n    svm.train(features, labels);  // train the model\n    const predictedLabel = svm.predictOne([0.7, 0.8]);\n    console.log(predictedLabel) // 0\n}\n\nxor().then(() => console.log('done!'));\n```\n\n# Benchmarks\nYou can compare the performance of the library in various environments. Run `npm run benchmark` to run the benchmarks with native c/c++ code and with the compiled code with your local version of node.js. For browser performance, go to the [web benchmark page](https://mljs.github.io/libsvm/#benchmarks).\n\nSpeed is mainly affected by the javascript engine that compiles it. Since WebAssembly has been stabilized and is an optimization phase, more recent engines are almost always faster.\n\nSpeed is also affected by the version of emscripten that generated the build or the options used in the build. I will try to keep up with any improvement that might significantly impact the performance.\n\n## Cross-validation benchmark\nI report the results here for the cross-validation benchmark on the iris dataset to get a feeling for how performance compares on different platforms. There are other benchmarks that can be run from the terminal in node.js or in the browser. The performance results are given relative to how they run natively (with compiled c++ code). The benchmarks only consider runtime performance, not load and parse performance.\n\n| Platform | Rel asm perf | Rel wasm perf |\n| --- | --- | --- |\n| Native | 100% | 100% |\n| Node.js 8.1.2 | 34.2% | 52.6% |\n| Node.js v7.10.0 | 14.4% | N/A |\n| Chrome 59.0.3071.115  | 36.2% | 51.3% |\n| Firefox 54.0 | 35.5% | 70.4% |\n\n\n# What are asm and WebAssembly ?\nFrom [asmjs.org](http;//asmjs.org)\n> asm is an optimizable subset of javascript.\n\nFrom [webassembly.org](http://webassembly.org)\n> WebAssembly or wasm is a new portable, size- and load-time-efficient format suitable for compilation to the web\n\n# Should I use asm or WebAssembly ?\nBoth. You should try to use WebAssembly first and fall back to asm in order to support all browsers.\n\nWebAssembly is currently supported in the latest stable versions of Chrome, Firefox and on preview versions of Safari and Edge.\n\n# API Documentation\n<a name=\"SVM\"></a>\n\n## SVM\n**Kind**: global class  \n\n* [SVM](#SVM)\n    * [new SVM(options)](#new_SVM_new)\n    * _instance_\n        * [.train(samples, labels)](#SVM+train)\n        * [.crossValidation(samples, labels, kFold)](#SVM+crossValidation) ⇒ <code>Array.&lt;number&gt;</code>\n        * [.free()](#SVM+free)\n        * [.predictOne(sample)](#SVM+predictOne) ⇒ <code>number</code>\n        * [.predict(samples)](#SVM+predict) ⇒ <code>Array.&lt;number&gt;</code>\n        * [.predictProbability(samples)](#SVM+predictProbability) ⇒ <code>Array.&lt;object&gt;</code>\n        * [.predictOneProbability(sample)](#SVM+predictOneProbability) ⇒ <code>object</code>\n        * [.predictOneInterval(sample, confidence)](#SVM+predictOneInterval) ⇒ <code>object</code>\n        * [.predictInterval(samples, confidence)](#SVM+predictInterval) ⇒ <code>Array.&lt;object&gt;</code>\n        * [.getLabels()](#SVM+getLabels) ⇒ <code>Array.&lt;number&gt;</code>\n        * [.getSVIndices()](#SVM+getSVIndices) ⇒ <code>Array.&lt;number&gt;</code>\n        * [.serializeModel()](#SVM+serializeModel) ⇒ <code>string</code>\n    * _static_\n        * [.SVM_TYPES](#SVM.SVM_TYPES) : <code>Object</code>\n        * [.KERNEL_TYPES](#SVM.KERNEL_TYPES) : <code>Object</code>\n        * [.load(serializedModel)](#SVM.load) ⇒ [<code>SVM</code>](#SVM)\n\n<a name=\"new_SVM_new\"></a>\n\n### new SVM(options)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| options | <code>object</code> |  |  |\n| [options.type] | <code>number</code> | <code>SVM_TYPES.C_SVC</code> | Type of SVM to perform, |\n| [options.kernel] | <code>number</code> | <code>KERNEL_TYPES.RBF</code> | Kernel function, |\n| [options.degree] | <code>number</code> | <code>3</code> | Degree of polynomial, for polynomial kernel |\n| [options.gamma] | <code>number</code> |  | Gamma parameter of the RBF, Polynomial and Sigmoid kernels. Default value is 1/num_features |\n| [options.coef0] | <code>number</code> | <code>0</code> | coef0 parameter for Polynomial and Sigmoid kernels |\n| [options.cost] | <code>number</code> | <code>1</code> | Cost parameter, for C SVC, Epsilon SVR and NU SVR |\n| [options.nu] | <code>number</code> | <code>0.5</code> | For NU SVC and NU SVR |\n| [options.epsilon] | <code>number</code> | <code>0.1</code> | For epsilon SVR |\n| [options.cacheSize] | <code>number</code> | <code>100</code> | Cache size in MB |\n| [options.tolerance] | <code>number</code> | <code>0.001</code> | Tolerance |\n| [options.shrinking] | <code>boolean</code> | <code>true</code> | Use shrinking euristics (faster), |\n| [options.probabilityEstimates] | <code>boolean</code> | <code>false</code> | weather to train SVC/SVR model for probability estimates, |\n| [options.weight] | <code>object</code> |  | Set weight for each possible class |\n| [options.quiet] | <code>boolean</code> | <code>true</code> | Print info during training if false |\n\n<a name=\"SVM+train\"></a>\n\n### svM.train(samples, labels)\nTrains the SVM model.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Throws**:\n\n- if SVM instance was instantiated from SVM.load.\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| samples | <code>Array.&lt;Array.&lt;number&gt;&gt;</code> | The training samples. First level of array are the samples, second level are the individual features |\n| labels | <code>Array.&lt;number&gt;</code> | The training labels. It should have the same size as the samples. If you are training a classification model, the labels should be distinct integers for each class. If you are training a regression model, each label should be the value of the predicted variable. |\n\n<a name=\"SVM+crossValidation\"></a>\n\n### svM.crossValidation(samples, labels, kFold) ⇒ <code>Array.&lt;number&gt;</code>\nPerforms k-fold cross-validation (KF-CV). KF-CV separates the data-set into kFold random equally sized partitions,\nand uses each as a validation set, with all other partitions used in the training set. Observations left over\nfrom if kFold does not divide the number of observations are left out of the cross-validation process. If\nkFold is one, this is equivalent to a leave-on-out cross-validation\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>Array.&lt;number&gt;</code> - The array of predicted labels produced by the cross validation. Has a size equal to\nthe number of samples provided as input.  \n**Throws**:\n\n- if SVM instance was instantiated from SVM.load.\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| samples | <code>Array.&lt;Array.&lt;number&gt;&gt;</code> | The training samples. |\n| labels | <code>Array.&lt;number&gt;</code> | The training labels. |\n| kFold | <code>number</code> | Number of datasets into which to split the training set. |\n\n<a name=\"SVM+free\"></a>\n\n### svM.free()\nFree the memory allocated for the model. Since this memory is stored in the memory model of emscripten, it is\nallocated within an ArrayBuffer and WILL NOT BE GARBARGE COLLECTED, you have to explicitly free it. So\nnot calling this will result in memory leaks. As of today in the browser, there is no way to hook the\ngarbage collection of the SVM object to free it automatically.\nFree the memory that was created by the compiled libsvm library to.\nstore the model. This model is reused every time the predict method is called.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n<a name=\"SVM+predictOne\"></a>\n\n### svM.predictOne(sample) ⇒ <code>number</code>\nPredict the label of one sample.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>number</code> - - The predicted label.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| sample | <code>Array.&lt;number&gt;</code> | The sample to predict. |\n\n<a name=\"SVM+predict\"></a>\n\n### svM.predict(samples) ⇒ <code>Array.&lt;number&gt;</code>\nPredict the label of many samples.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>Array.&lt;number&gt;</code> - - The predicted labels.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| samples | <code>Array.&lt;Array.&lt;number&gt;&gt;</code> | The samples to predict. |\n\n<a name=\"SVM+predictProbability\"></a>\n\n### svM.predictProbability(samples) ⇒ <code>Array.&lt;object&gt;</code>\nPredict the label with probability estimate of many samples.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>Array.&lt;object&gt;</code> - - An array of objects containing the prediction label and the probability estimates for each label  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| samples | <code>Array.&lt;Array.&lt;number&gt;&gt;</code> | The samples to predict. |\n\n<a name=\"SVM+predictOneProbability\"></a>\n\n### svM.predictOneProbability(sample) ⇒ <code>object</code>\nPredict the label with probability estimate.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>object</code> - - An object containing the prediction label and the probability estimates for each label  \n\n| Param | Type |\n| --- | --- |\n| sample | <code>Array.&lt;number&gt;</code> | \n\n<a name=\"SVM+predictOneInterval\"></a>\n\n### svM.predictOneInterval(sample, confidence) ⇒ <code>object</code>\nPredict a regression value with a confidence interval\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>object</code> - - An object containing the prediction value and the lower and upper bounds of the confidence interval  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| sample | <code>Array.&lt;number&gt;</code> |  |\n| confidence | <code>number</code> | A value between 0 and 1. For example, a value 0.95 will give you the 95% confidence interval of the predicted value. |\n\n<a name=\"SVM+predictInterval\"></a>\n\n### svM.predictInterval(samples, confidence) ⇒ <code>Array.&lt;object&gt;</code>\nPredict regression values with confidence intervals\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>Array.&lt;object&gt;</code> - - An array of objects each containing the prediction label and the probability estimates for each label  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| samples | <code>Array.&lt;Array.&lt;number&gt;&gt;</code> | An array of samples. |\n| confidence | <code>number</code> | A value between 0 and 1. For example, a value 0.95 will give you the 95% confidence interval of the predicted value. |\n\n<a name=\"SVM+getLabels\"></a>\n\n### svM.getLabels() ⇒ <code>Array.&lt;number&gt;</code>\nGet the array of labels from the model. Useful when creating an SVM instance with SVM.load\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>Array.&lt;number&gt;</code> - - The list of labels.  \n<a name=\"SVM+getSVIndices\"></a>\n\n### svM.getSVIndices() ⇒ <code>Array.&lt;number&gt;</code>\nGet the indices of the support vectors from the training set passed to the train method.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>Array.&lt;number&gt;</code> - - The list of indices from the training samples.  \n<a name=\"SVM+serializeModel\"></a>\n\n### svM.serializeModel() ⇒ <code>string</code>\nUses libsvm's serialization method of the model.\n\n**Kind**: instance method of [<code>SVM</code>](#SVM)  \n**Returns**: <code>string</code> - The serialization string.  \n<a name=\"SVM.SVM_TYPES\"></a>\n\n### SVM.SVM_TYPES : <code>Object</code>\nSVM classification and regression types\n\n**Kind**: static property of [<code>SVM</code>](#SVM)  \n**Properties**\n\n| Name | Description |\n| --- | --- |\n| C_SVC | The C support vector classifier type |\n| NU_SVC | The nu support vector classifier type |\n| ONE_CLASS | The one-class support vector classifier type |\n| EPSILON_SVR | The epsilon support vector regression type |\n| NU_SVR | The nu support vector regression type |\n\n<a name=\"SVM.KERNEL_TYPES\"></a>\n\n### SVM.KERNEL_TYPES : <code>Object</code>\nSVM kernel types\n\n**Kind**: static property of [<code>SVM</code>](#SVM)  \n**Properties**\n\n| Name | Description |\n| --- | --- |\n| LINEAR | Linear kernel |\n| POLYNOMIAL | Polynomial kernel |\n| RBF | Radial basis function (gaussian) kernel |\n| SIGMOID | Sigmoid kernel |\n\n<a name=\"SVM.load\"></a>\n\n### SVM.load(serializedModel) ⇒ [<code>SVM</code>](#SVM)\nCreate a SVM instance from the serialized model.\n\n**Kind**: static method of [<code>SVM</code>](#SVM)  \n**Returns**: [<code>SVM</code>](#SVM) - - SVM instance that contains the model.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| serializedModel | <code>string</code> | The serialized model. |\n\n\n# LICENSE\nBSD-3-Clause\n\n[npm-image]: https://img.shields.io/npm/v/libsvm-js.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/libsvm-js\n[download-image]: https://img.shields.io/npm/dm/libsvm-js.svg?style=flat-square\n[download-url]: https://npmjs.org/package/libsvm-js\n","maintainers":[{"email":"bot+npm-mljs@zakodium.com","name":"mljs-bot"},{"email":"kostro.d@gmail.com","name":"stropitek"},{"email":"targos+npm@protonmail.com","name":"targos"},{"email":"lpatiny@gmail.com","name":"lpatiny"},{"email":"maasencioh@gmail.com","name":"maasencioh"},{"email":"jeffersonh44@gmail.com","name":"jeffersonh44"},{"email":"andcastillo@gmail.com","name":"andcastillo"},{"email":"admin@cheminfo.org","name":"ml-bot"}],"time":{"modified":"2022-05-07T23:39:42.490Z","created":"2017-06-02T14:22:54.935Z","0.1.0":"2017-06-02T14:22:54.935Z","0.1.1":"2017-07-06T07:52:55.016Z","0.1.2":"2017-07-25T12:14:39.301Z","0.1.3":"2017-12-12T16:52:25.031Z","0.2.0":"2018-04-04T21:13:07.578Z","0.2.1":"2018-05-24T11:33:38.858Z"},"homepage":"https://github.com/mljs/libsvm#readme","keywords":["svm","libsvm","machine","learning","support","vector","machines"],"repository":{"type":"git","url":"git+https://github.com/mljs/libsvm.git"},"author":{"name":"Daniel Kostro","email":"kostro.d@gmail.com"},"bugs":{"url":"https://github.com/mljs/libsvm/issues"},"license":"BSD-3-Clause","readmeFilename":"README.md","users":{"neoevansun":true}}