{"_id":"@repetere/node-redshift","_rev":"6-39e6e61723ee5303187c684a166cb35a","name":"@repetere/node-redshift","dist-tags":{"latest":"1.0.4"},"versions":{"1.0.0":{"name":"@repetere/node-redshift","version":"1.0.0","description":"A simple collection of tools to help you get started with Amazon Redshift from node.js","main":"index.js","dependencies":{"bluebird":"^3.5.0","commander":"^2.9.0","migrate":"^0.2.2","mongo-sql":"^6.0.0","pg":"^6.1.2","sql-bricks":"^1.2.3"},"repository":{"type":"git","url":"git+https://github.com/dmanjunath/node-redshift.git"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["redshift","aws","node redshift","aws redshfit"],"bin":{"node-redshift":"./bin/node-redshift"},"author":{"name":"Dheeraj Manjunath @dmanjunath"},"license":"MIT","gitHead":"e2e88aa3ddd5a9bddfb2aa51a34d729b92ce120b","bugs":{"url":"https://github.com/dmanjunath/node-redshift/issues"},"homepage":"https://github.com/dmanjunath/node-redshift#readme","_id":"@repetere/node-redshift@1.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"janbialostok","email":"janbialostok@gmail.com"},"dist":{"integrity":"sha512-6ePG3P0wYfnKCqINiSOdJuLXBnhpMzJ9D7OuWkJ4JQa90Fk35KMbIgr9cc9wr4/6SoNllPfzL07AV9sBeX22rg==","shasum":"eb9fc74ce5f116ad4dab4a5ddf8306a57c62af61","tarball":"https://registry.npmjs.org/@repetere/node-redshift/-/node-redshift-1.0.0.tgz","fileCount":15,"unpackedSize":35913,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbj0L8CRA9TVsSAnZWagAA4fkP/j6Ha6XWoH/TkSwv7MpJ\nJim4EdOYNll6YacLVNrew8PiqqIGEGF8j97Klbbt2BrYwkoUOLDjnMvsm8Z1\n+WGrhxRaV1rwWGcwtEYWmLDqa17rwknGjsLVWF9OJ1YZETdXxgCMDxmaKNLG\nN03S55UqeVpkg5m3IcFKfYiKOiwnbHUkr84HxxLQfi6A/IpLrfauF9K5skyy\nok6W40vBwE/5TsLptjs/G1IBMDG9+enYhOB6baoZJ6V44L+sGylq2ZZoik/6\n/5vLzzDkzLGcYaAlpEnEDz5z3ScrVLwJdS/27L2uYLzkT5qxWUAJ6QIKq36M\nac46P/H46sJKD8kp2+KVISDIrMvB5RrnOXfykscyjxGjJCCMne6KDZLsTczi\n/4P+1eqZSw/EL001X6FQtYFIABEWTL4BVdeTfi3X9/pd+1Di2ByuT57o+vwm\ngnCahJ/ITipoMORjC0HD5RgCXmqCJ8q4XikZ3V4m17HJVVYkIrj7Sr2L/WrO\n7Hrg80EOA+OWraphKGWd2+V+piNWtWH8vvAkkRiX7ZBzJ2H6h38+gBiH4FyF\nYa6SuWkJD91sLSuR15/vYNxKpaQrE0HzwlvprFwTnamzeLEKcDMWBDkmNjLt\nDkCkUTOA1ZpVSjdCfvoV7DGFnxsKRq4gV7U6YHlbFvQ1XV9nEWlZV6mTrnM1\nhEs4\r\n=JJhN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC/tUiMDN/XKmr4y8mcHXopbBNGfi82CYcx4ILahyg5cwIhAKV7v8G00DpKd1lwQO8NzRX5Vo5fubR06k9rOudi8dKV"}]},"maintainers":[{"name":"janbialostok","email":"janbialostok@gmail.com"},{"name":"repetere_user","email":"developers@repetere.io"},{"name":"yawetse","email":"yaw.etse@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-redshift_1.0.0_1536115451634_0.3697406539256103"},"_hasShrinkwrap":false},"1.0.1":{"name":"@repetere/node-redshift","version":"1.0.1","description":"A simple collection of tools to help you get started with Amazon Redshift from node.js","main":"index.js","dependencies":{"bluebird":"^3.5.0","commander":"^2.9.0","migrate":"^0.2.2","mongo-sql":"^6.0.0","pg":"^6.1.2","sql-bricks":"^1.2.3"},"repository":{"type":"git","url":"git+https://github.com/dmanjunath/node-redshift.git"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["redshift","aws","node redshift","aws redshfit"],"bin":{"node-redshift":"./bin/node-redshift"},"author":{"name":"Dheeraj Manjunath @dmanjunath"},"license":"MIT","gitHead":"1a03d73c37c7b595e4f6e9d919fc5e8678e34226","bugs":{"url":"https://github.com/dmanjunath/node-redshift/issues"},"homepage":"https://github.com/dmanjunath/node-redshift#readme","_id":"@repetere/node-redshift@1.0.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"janbialostok","email":"janbialostok@gmail.com"},"dist":{"integrity":"sha512-5gzwvyqv2P6LDPFv361oLndwQlTmxwwc0ZCktO6OC1Mdh/ea5SE+qYt7YTKvjfLHS18S2QgNqmm06yVIK6KIYw==","shasum":"f46e1e1b51dea79959f83fc6af8ffaa4e866109d","tarball":"https://registry.npmjs.org/@repetere/node-redshift/-/node-redshift-1.0.1.tgz","fileCount":15,"unpackedSize":36012,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbj+U3CRA9TVsSAnZWagAAGikP/2PHOnEk9O7YSaeV2iLf\nEnw1uFx2SlzHA/neQdxtjesK2ppi7/md95Wm46xSpUS8SSfdEc+IHGBX6qMf\nJGkWl3djNnoqsvV8guqshY44hnrgGEsFH/B5McMZ9y7+mXaixXjnvPVtEhFG\n6kpAGJgQcZlcoIC8YLHa5KEyA2CcyStiMNgxwvcM8dlMHxmHjCMxvCn+yJxQ\nCpv7zR4LoXUiDUF/UDBzdkpSkWYLZ74weApAPwvDq5/D+1jkD6OMp5DrWqIb\n4Ht3PcHVVkOd/Qe5DZMR6fGqRr5JY0cX6YWVCRPpNkxdh77eBYB8nm9OlZLD\nNRPp8PUa/SwrMTFBiQtmbVHsOfP2ucVWHI5/ra3fR4lAtmOM7axMlGalFW6e\njtMnVxr6VHzUP/MVcOGlPCqXsyg5/0gaR21WZrb9xN/9IVDxS7oQXa+nhZ4U\n2O0TrDjw6CJIhP9msGOCRCnkcOb+JIi7DnWoAqpoHLDrcRxi995ea02CPac6\nWYMlZ6lnOWLu6cG7EU8F5UgtavB749OmUi7y6F2WjZes5URPsANS5AxGuBZm\nQyuKJqrXb8B5CdTjipDWewW+89DGcC93uTsFH1H90FYRUViYGBDU6AwIcdHO\nYbumAD859L33V4Fo4RHhztmYu8caR9qCqzHnq9F3HM2sAOyUIJPr+/s7QiNF\nFWW1\r\n=Xgl1\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCMMQMkS83XRaU+JIJTP7VZyww3R7sW9aEnT9Wm74PRiwIhAKR1npc0h0rnO79pKwQ3Pf5x0OGtM2TORCEe8QAKJoED"}]},"maintainers":[{"name":"janbialostok","email":"janbialostok@gmail.com"},{"name":"repetere_user","email":"developers@repetere.io"},{"name":"yawetse","email":"yaw.etse@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-redshift_1.0.1_1536156973351_0.43841491901636"},"_hasShrinkwrap":false},"1.0.2":{"name":"@repetere/node-redshift","version":"1.0.2","description":"A simple collection of tools to help you get started with Amazon Redshift from node.js","main":"index.js","dependencies":{"bluebird":"^3.5.0","commander":"^2.9.0","migrate":"^0.2.2","mongo-sql":"^6.0.0","pg":"^6.1.2","sql-bricks":"^1.2.3"},"repository":{"type":"git","url":"git+https://github.com/dmanjunath/node-redshift.git"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["redshift","aws","node redshift","aws redshfit"],"bin":{"node-redshift":"./bin/node-redshift"},"author":{"name":"Dheeraj Manjunath @dmanjunath"},"license":"MIT","gitHead":"1f3df47b72e150c476e2ad7baf7c1aef559054c3","bugs":{"url":"https://github.com/dmanjunath/node-redshift/issues"},"homepage":"https://github.com/dmanjunath/node-redshift#readme","_id":"@repetere/node-redshift@1.0.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"janbialostok","email":"janbialostok@gmail.com"},"dist":{"integrity":"sha512-Ed+DbiYMeTWJZq7+xrUdELpAA2E4lSdalJ6gAp0X3i+yjE76xs/cDyP/vwCmTaetkZMcI3U3iq92UwRcLFcKFQ==","shasum":"9eb9bb2fa85d7c094dee1b3660c1bada6095f1e0","tarball":"https://registry.npmjs.org/@repetere/node-redshift/-/node-redshift-1.0.2.tgz","fileCount":15,"unpackedSize":36160,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbj+zuCRA9TVsSAnZWagAASBkP/1Elg8VcNT1vQwCEuPa8\n7IUkhYJQoYU0t7aHkkI2jJuUYrI+eWbucatN3JvknJQNftQCchGDHsDSy89l\nRtDhD67Yt6/OwSWUTfOMMbnHuj3AhemtWuTdv6gYF8lOv5uTHndkgDs+QAEB\n5BnTJwRPJ1zb+ycHK5bJyy07fBe93O0yGi7NC+PaSeuUMNmDFGDmwIVfSmQp\n2AzaMXBKurgiGPtLlVv5lCPYXDWywK1uEjIIJ7I9wJSOgTHmi7OcQaOsVwZP\n84pNeNsy2jeZn3KHM87IHMQJf6VhZ+zWskw+BXmytzBZTNzHJQw6FuOsLsqN\nOIul6ruyHBxruiQdhCXgkx8SsSPIDlVeGGUH2elONisOcEPRj7mkDhC78lBf\nX/kb8v4P81sAKiYR0Er4rW4dXR5/h82toCaUeERE+NbS2tt0cC6M6RE//mLr\nSU2+U4JkKOuFDUtfAUDRgDRVvWyyuIfbakskHgudGNV1gU1eDZPm1cbnePCI\nNgLmsu/XL+ZcM6EGlGRXYMroruwE4OheffWaoeUCL5dh9Aj6n/1L/xctKznZ\nhRg0QpqyG6STMkKeHVPT+X/I6fkhhSFTXO1EKwRm8v5GFzIJhd2Dfgk7fC/p\nuMXghwqttCTvyxbH6xBL3KyuVbuADy9YcnS2QAhVCE5T0DZKdArsUAIWWpVP\n6BqB\r\n=Baff\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDfRRzdGbhjrnhZCMzmSB/99itXJ1v5dhJsQkHaWcG/egIgZD+zlwbFz8O2aUM/d6ayeQ7kR7ytGNd/e42eHmBVaZk="}]},"maintainers":[{"name":"janbialostok","email":"janbialostok@gmail.com"},{"name":"repetere_user","email":"developers@repetere.io"},{"name":"yawetse","email":"yaw.etse@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-redshift_1.0.2_1536158957930_0.13565124939041806"},"_hasShrinkwrap":false},"1.0.3":{"name":"@repetere/node-redshift","version":"1.0.3","description":"A simple collection of tools to help you get started with Amazon Redshift from node.js","main":"index.js","dependencies":{"bluebird":"^3.5.0","commander":"^2.9.0","migrate":"^0.2.2","mongo-sql":"^6.0.0","pg":"^6.1.2","sql-bricks":"^1.2.3"},"repository":{"type":"git","url":"git+https://github.com/dmanjunath/node-redshift.git"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["redshift","aws","node redshift","aws redshfit"],"bin":{"node-redshift":"./bin/node-redshift"},"author":{"name":"Dheeraj Manjunath @dmanjunath"},"license":"MIT","gitHead":"3baa8cc2225c31729bff6413b90f9ed9af8742ef","bugs":{"url":"https://github.com/dmanjunath/node-redshift/issues"},"homepage":"https://github.com/dmanjunath/node-redshift#readme","_id":"@repetere/node-redshift@1.0.3","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"janbialostok","email":"janbialostok@gmail.com"},"dist":{"integrity":"sha512-nEKCk70JP1aZ4zvhAtcAKS+VSu8JBwP//IFZEhg7PYfE4rEWKkLw9n2p79GY87bmO7NlkFp/5LGa8cX5gr2Hfw==","shasum":"092f2ebfd5871305e8a1a234eff634573c3ed26c","tarball":"https://registry.npmjs.org/@repetere/node-redshift/-/node-redshift-1.0.3.tgz","fileCount":15,"unpackedSize":36204,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbma58CRA9TVsSAnZWagAAuRgQAJJn2zVJN4H2aI1HUnHg\nrBvc8pTF0Hs63gqgOWxId1vE8I8J5SOap0bujEzZKkZaTqWRsoZz8DRbTgZb\nurKLdIWDie7R35TDUJ8G247ClBWDAulfpYH8P9IUC2Ng1g1mTgAhW+nbiiu3\nthfU0R9dblXqYgfIZ0xJOPLnAeSDYw+IgvWRAYfZ/eeQUytPNigbrgV8xClS\nWz0YmkzHfED97hvL6zk/7excB7SHOzdb/8uAElc0vVs49uPtU5r1BbLIx1Ek\nBDtXBQtC/7vNhR3KwdRKrrnmNfZncLPpUp5/3aMT3wmPZ09Iyb/E8lBx1AaM\nlwrAw4UBrhRDfDAID0okHKAvKKm6F3CMLoWZa0tuQVCppzZ8llh5DLg7kJU9\nAMkXFxKW6/WeKDCvCj3n2jdvk/sl3NxlEb7MqgPR4melFSJwScbM1NPH/og9\nlDZgSEEit35OQOSmQPUYnS+kqiCL2imi3J2sBXiN5Sv5m7Yn5P197DRS1/sW\nh3yAj2/ic8eHecvYOsXFRoeLf99WKRxf+6/hewvD851O/sShi391VvL9qPuO\n8ckvY84BIWh4fiRl9dV/J+4lvKn0/UKdgVwz8gdPhQxHjHH/5Gsg2XshCail\n4VKlO7pjOgOy+fIgemlRVmxY0zvzo8EbBXGTrRi1d/sq9px6OEc5kqzkanLV\ndKiU\r\n=XEGF\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDZtOxvhIZx8Xfol4wxTWsczXn/PgIao2jcupQQFLDuEAiEA6Ch8G/LWq34m6YYjhBNIJjnt7st32TmhWleBrpyU9Cs="}]},"maintainers":[{"name":"janbialostok","email":"janbialostok@gmail.com"},{"name":"repetere_user","email":"developers@repetere.io"},{"name":"yawetse","email":"yaw.etse@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-redshift_1.0.3_1536798331336_0.5936388644469555"},"_hasShrinkwrap":false},"1.0.4":{"name":"@repetere/node-redshift","version":"1.0.4","description":"A simple collection of tools to help you get started with Amazon Redshift from node.js","main":"index.js","dependencies":{"bluebird":"^3.5.0","commander":"^2.9.0","migrate":"^0.2.2","mongo-sql":"^6.0.0","pg":"^6.1.2","sql-bricks":"^1.2.3"},"repository":{"type":"git","url":"git+https://github.com/dmanjunath/node-redshift.git"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["redshift","aws","node redshift","aws redshfit"],"bin":{"node-redshift":"./bin/node-redshift"},"author":{"name":"Dheeraj Manjunath @dmanjunath"},"license":"MIT","gitHead":"9ca743ce33faa2f89c6ffbcc0fc7677ee23a720c","bugs":{"url":"https://github.com/dmanjunath/node-redshift/issues"},"homepage":"https://github.com/dmanjunath/node-redshift#readme","_id":"@repetere/node-redshift@1.0.4","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"janbialostok","email":"janbialostok@gmail.com"},"dist":{"integrity":"sha512-pRmmYMh8RbhPY1TbeAuRnUrKNEoeRWJUU1A7jL1zAsYy9/qOAzU7cYezD2WlDHEkodf5SLWwzoTv/Wx4DYoaMQ==","shasum":"13a60fc4f263b8730167a1b13ba69b678710d96f","tarball":"https://registry.npmjs.org/@repetere/node-redshift/-/node-redshift-1.0.4.tgz","fileCount":15,"unpackedSize":36177,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbmccuCRA9TVsSAnZWagAAv9QQAJ8RKso6bV9dKC+46b00\nteryTirTnG3MrKJNYt9lVtulZpnX6nwgdxV+j+djmwqJS3+ChQzMpEurzTJL\nI7QSSkGF+MYYCK1BH2q+SHby/dztHDb25DDBYkKHhH/silDDEM1dJQcq08PQ\naYhyT1vDb7HUW4GXNHKJj+ofk7kSbr2ghyjdMpLMkE7ucJ18FcEUOqVd8p+C\novwPky7ousi4k+EHZAwF61Pry3uoUUlpFB4lOhHfD+tdmX9rw+aSjQDbvDmb\nLXEEcWzy4dS5CYZ2sdEwp0lnvmfj6KIbkxH1upXxm8/TAzGSMg3F1vNq3fpp\nN3PR3AXJHvSNp35k436ut9IJi/R6VRI2bdXOvSfZ++tJmOf818AkYVxo8Cna\nZ+efdNJNvuhCkQeHzeCj7dgsD6Cc0IG7u83tObeuL+gRQhDQyOKsDSDVLK4J\nfgzteYqf9BReObaGM2LTo1+FufSGdBoRdNAwZypwb4QFkhk3rDLdynPOjHOY\nh83N6yVc+iUQkHAhaBdzH69AWiYajyz32fkVnvRkR3jkUjK+N5Q8W8/DQcs9\nTpnJeeMe8TyV2W8as0yyZTvIFzNI77wRLxhc/ZFR8ud069xEyh70Fx4FnnJx\nzMvtd2nSrMWuaJh3c8GCezs0hxut/A2xHTQ4i/PuDN+BY+KxeafaBl1Rp6hr\ngigk\r\n=OVLp\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFKZ2Sc7B4xbv8ddtYBjr/3mmNRnTCsO8tdzBnJTMdNyAiBf4bbnGE9sb/Xl8J65WWJubV8B9OiEEVJ1gmQKa/N8ZA=="}]},"maintainers":[{"name":"janbialostok","email":"janbialostok@gmail.com"},{"name":"repetere_user","email":"developers@repetere.io"},{"name":"yawetse","email":"yaw.etse@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-redshift_1.0.4_1536804653361_0.8603391521266297"},"_hasShrinkwrap":false}},"time":{"created":"2018-09-05T02:44:11.634Z","1.0.0":"2018-09-05T02:44:11.781Z","modified":"2022-04-06T19:24:13.904Z","1.0.1":"2018-09-05T14:16:16.037Z","1.0.2":"2018-09-05T14:49:18.049Z","1.0.3":"2018-09-13T00:25:31.446Z","1.0.4":"2018-09-13T02:10:53.543Z"},"maintainers":[{"email":"dcrmls@gmail.com","name":"dcrescim"},{"email":"janbialostok@gmail.com","name":"janbialostok"},{"email":"developers@repetere.io","name":"repetere_user"},{"email":"yaw.etse@gmail.com","name":"yawetse"}],"description":"A simple collection of tools to help you get started with Amazon Redshift from node.js","homepage":"https://github.com/dmanjunath/node-redshift#readme","keywords":["redshift","aws","node redshift","aws redshfit"],"repository":{"type":"git","url":"git+https://github.com/dmanjunath/node-redshift.git"},"author":{"name":"Dheeraj Manjunath @dmanjunath"},"bugs":{"url":"https://github.com/dmanjunath/node-redshift/issues"},"license":"MIT","readme":"## Navigation\n\n#### [Overview](https://github.com/dmanjunath/node-redshift#overview-1)\n\n#### [Installation](https://github.com/dmanjunath/node-redshift#installation-1)\n\n#### [Setup](https://github.com/dmanjunath/node-redshift#setup-1)\n\n#### [Usage](https://github.com/dmanjunath/node-redshift#usage-1)\n\n- #### [Query API](https://github.com/dmanjunath/node-redshift#query-api-2)\n- #### [CLI](https://github.com/dmanjunath/node-redshift#cli-2)\n- #### [Models](https://github.com/dmanjunath/node-redshift#models-2)\n- #### [ORM](https://github.com/dmanjunath/node-redshift#orm-api)\n\n#### [Upcoming Features](https://github.com/dmanjunath/node-redshift#upcoming-features-1)\n\n#### [License](https://github.com/dmanjunath/node-redshift#license-1)\n\n## Overview\nThis package is a simple wrapper for common functionality you want when using Redshift. It can do\n- Redshift connections & querying\n- Creating and running migrations\n- Create and manage models\n- CRUD API with ORM wrapper with type validation\n\nWarning!!!!!! This is new and still under development. The API is bound to change. Use at your own risk.\n\n## Installation\nInstall the package by running\n```javascript\nnpm install node-redshift\n```\nLink to npm repository https://www.npmjs.com/package/node-redshift\n\n## Setup\n\nThe code to connect to redshift should be something like this:\n```javascript\n//redshift.js\nvar Redshift = require('node-redshift');\n\nvar client = {\n  user: user,\n  database: database,\n  password: password,\n  port: port,\n  host: host,\n};\n\n// The values passed in to the options object will be the difference between a connection pool and raw connection\nvar redshiftClient = new Redshift(client, [options]);\n\nmodule.exports = redshiftClient;\n```\n\nThere are two ways to setup a connection to redshift. \n\n- [Connection Pooling](https://github.com/dmanjunath/node-redshift#connection-pooling) -  you can open a connection pool and open connections to Redshift which will be managed by pg-pool (https://github.com/brianc/node-pg-pool)\n- [Raw Connection](https://github.com/dmanjunath/node-redshift#raw-connection) - a one time connection you must manually initialize and close to run queries\n\n\n###### ***By default node-redshift uses connection pooling\n\n#### \n##### Raw Connection\nPass in the rawConnection parameter in the redshift instantiation options to specify a raw connection. Raw connections need extra code to specify when to connect and disconnect from Redshift. [Here's an example of the raw connection query](https://github.com/dmanjunath/node-redshift/blob/master/examples/raw_connection.js)\n\n```javascript\nvar redshiftClient = new Redshift(client, {rawConnection: true});\n```\n\n##### Connection Pooling \nConnection pooling works by default with no extra configuration. [Here's an example of connection pooling](https://github.com/dmanjunath/node-redshift/blob/master/examples/connection_pooling.js)\n\n##### Setup Options\nThere are two options that can be passed into the options object in the Redshift constructor.\n\n| Option                | Type          | Description                                                                       |\n| --------------------- |:-------------:| ---------------------------------------------------------------------------------:|\n| rawConnection         | Boolean       | If you want a raw connection, pass true with this option                          |\n| longStackTraces       | Boolean       | Default: true. If you want to disable [bluebird's longStackTraces](http://bluebirdjs.com/docs/api/promise.longstacktraces.html), pass in false   |\n\n\n## Usage\n\n#### [Query API](https://github.com/dmanjunath/node-redshift#query-api-2)\n#### [CLI](https://github.com/dmanjunath/node-redshift#cli-2)\n#### [Models](https://github.com/dmanjunath/node-redshift#models-2)\n#### [ORM](https://github.com/dmanjunath/node-redshift#orm-api)\n#\n### Query API\nPlease see examples/ folder for full code examples using both raw connections and connection pools.\n\nFor those looking for a library to build robust, injection safe SQL, I like [sql-bricks](http://csnw.github.io/sql-bricks/) to build query strings.\n\nBoth Raw Connections and Connection Pool connections have two query functions that are bound to the initialized Redshift object: `query()` and a `parameterizedQuery()`.\n\nAll `query()` and `parameterizedQuery()` functions support **both callback and promise style**. If there's a function as a third argument, the callback will fire. If there's no third function argument, but instead (query, [options]).then({})... the promise will fire.\n\n```javascript\n//raw connection\nvar redshiftClient = require('./redshift.js');\n\nredshiftClient.connect(function(err){\n  if(err) throw err;\n  else{\n    redshiftClient.query('SELECT * FROM \"TableName\"', [options], function(err, data){\n      if(err) throw err;\n      else{\n        console.log(data);\n        redshiftClient.close();\n      }\n    });\n  }\n});\n```\n#\n```javascript\n//connection pool\nvar redshiftClient = require('./redshift.js');\n\n// options is an optional object with one property so far {raw: true} returns \n// just the data from redshift. {raw: false} returns the data with the pg object\nredshiftClient.query(queryString, [options])\n.then(function(data){\n    console.log(data);\n})\n.catch(function(err){\n    console.error(err);\n});\n//instead of promises you can also use callbacks to get the data\n```\n\n##### Parameterized Queries \nIf you parameterize the SQL string yourself, you can call the `parameterizeQuery()` function \n```javascript\n//connection pool\nvar redshiftClient = require('./redshift.js');\n\n// options is an optional object with one property so far {raw: true} returns \n// just the data from redshift. {raw: false} returns the data with the pg object\nredshiftClient.parameterizedQuery('SELECT * FROM \"TableName\" WHERE \"parameter\" = $1', [42], [options], function(err, data){\n  if(err) throw err;\n  else{\n    console.log(data);\n  }\n});\n//you can also use promises to get the data\n```\n\n##### Template Literal Queries \nIf you use template literals to write your SQL, you can use a tagged template parser like https://github.com/felixfbecker/node-sql-template-strings to parameterize the template literal\n```javascript\n//connection pool\nvar redshiftClient = require('./redshift.js');\nvar SQL = require('sql-template-strings');\n\n// options is an optional object with one property so far {raw: true} returns \n// just the data from redshift. {raw: false} returns the data with the pg object\nlet value = 42;\n\nredshiftClient.query(SQL`SELECT * FROM \"TableName\" WHERE \"parameter\" = ${value}`, [options], function(err, data){\n  if(err) throw err;\n  else{\n    console.log(data);\n  }\n});\n//you can also use promises to get the data\n```\n\n##### `rawQuery()` \nIf you want to make a one time raw query, but you don't want to call connect & disconnect manually and you dont want to use conection pooling, you can use `rawQuery()`\n```javascript\n//connection pool\nvar redshiftClient = require('./redshift.js');\n\n// options is an optional object with one property so far {raw: true} returns \n// just the data from redshift. {raw: false} returns the data with the pg object\nredshiftClient.rawQuery('SELECT * FROM \"TableName\"', [options], function(err, data){\n  if(err) throw err;\n  else{\n    console.log(data);\n  }\n});\n//you can also use promises to get the data\n```\n\n##### Query Options \nThere's only a single query option so far. For the options object, the only valid option is {raw: true}, which returns just the data from redshift. {raw: false} or not specifying the value will return the data along with the entire pg object with data such as row count, table statistics etc.\n\n\n### CLI\nThere's a CLI with options for easy migration management. Creating a migration will create a `redshift_migrations/` folder with a state file called `.migrate` in it which contains the state of your completed migrations. The .migrate file keeps track of which migrations have been run, and when you run db:migrate, it computes the migrations that have not yet been run on your Redshift instance and runs them and saves the state of `.migrate`\n\nWARNING!!! IF YOU HAVE SEPARATE DEV AND PROD REDSHIFT INSTANCES, DO NOT COMMIT THE `.migrate` FILE TO YOUR VCS OR DEPLOY TO YOUR SERVERS. YOU'LL NEED A NEW VERSION OF THIS FILE FOR EVERY INSTANCE OF REDSHIFT.\n\n##### Create a new migration file in redshift_migrations/ folder\n#\n```\nnode_modules/.bin/node-redshift migration:create <filename>\n```\n\n##### Run all remaining migrations on database\n#\n```\nnode_modules/.bin/node-redshift db:migrate <filename>\n```\n\n##### Undo last migration\n#\n```\nnode_modules/.bin/node-redshift db:migrate:undo <filename>\n```\n\n##### Creating a model using the command line\n#\n```\nnode_modules/.bin/node-redshift model:create <filename>\n```\n\n### Models\n\nA model will look like this\n```javascript\n'use strict';\n  var person = {\n    'tableName': 'people',\n    'tableProperties': {\n      'id': {\n        'type': 'key'\n      },\n      'name': { \n        'type': 'string',\n        'required': true\n      },\n      'email': { \n        'type': 'string',\n        'required': true\n      }\n    }\n  };\n  module.exports = person;\n```\n##### Importing and using model with ORM\n#\nThere are two ways you could import and use redshift models. The first is using redshift.import in every file where you want to use the model ORM.\n```javascript\nvar redshift = require(\"../redshift.js\");\nvar person = redshift.import(\"./redshift_models/person.js\");\n\nperson.create({name: 'Dheeraj', email: 'dheeraj@email.com'}, function(err, data){\n    if(err) throw err;\n    else{\n      console.log(data);\n    }\n  });\n```\n\nThe alternative(my preferred way) is to abstract the import calls and export all the models with the redshift object right after initialization\n\n```javascript\n//redshift.js\n...redshift connection code...\n\nvar person = redshift.import(\"./redshift_models/person.js\");\nredshift.models = {};\nredshift.models.person = person;\n\nmodule.exports = redshift;\n\n//usage in person.js\nvar redshiftConnection = require('./redshift.js');\nvar person = redshift.models.person;\n\nperson.create({name: 'Dheeraj', email: 'dheeraj@email.com'}, function(err, data){\n    if(err) throw err;\n    else{\n      console.log(data);\n    }\n  });\n```\n\n### ORM API\nThere are 3 functions supported by the ORM\n```javascript\n/**\n * create a new instance of object\n * @param  {Object or Array}   data Object/Array with keys/values to create in database. keys are column names, values are data\n * @param  {Function} cb   \n * @return {Object}        Object that's inserted into redshift\n */\nPerson.create({emailAddress: 'dheeraj@email.com', name: 'Dheeraj'}, function(err, data){\n  if(err) throw err;\n  else console.log(data);\n});\n \n/**\n * update an existing item in redshift\n * @param  {Object}   whereClause The properties that identify the rows to update. Essentially the WHERE clause in the UPDATE statement\n * @param  {Object}   data        Properties to overwrite in the record\n * @param  {Function} callback    \n * @return {Object}               Object that's updated in redshift\n *\n */\nPerson.update({id: 72}, {emailAddress: 'dheeraj@email.com', name: 'Dheeraj'}, function(err, data){\n  if(err) throw err;\n  else console.log(data);\n});\n\n/**\n * delete rows from redshift\n * @param  {Object}   whereClause The properties that identify the rows to update. Essentially the WHERE clause in the UPDATE statement\n * @param  {Function} cb   \n * @return {Object}        Object that's deleted from redshift\n */\nPerson.delete({emailAddress: 'dheeraj@email.com', name: 'Dheeraj'}, function(err, data){\n  if(err) throw err;\n  else console.log(data);\n});\n```\n\n## Upcoming features\n- Ability to customize location of `.migrate` file or even from S3\n- Model checking prior to queries to verify property name and type\n- Add class & instance methods to model\n\n## License\nMIT\n","readmeFilename":"README.md"}